version: '3.9'

services:
  smtp:
    container_name: smtp
    image: boky/postfix
    restart: always
    ports: ['127.0.0.1:1587:587']
    volumes:
      - ./.tmp/opendkim-keys:/etc/opendkim/keys
      - ./.tmp/var/spool/postfix:/var/spool/postfix # to persist queue during container restarts
    environment:
      TZ: UTC
      ALLOWED_SENDER_DOMAINS: feedsubscription.com
    depends_on: [logger]
    logging:
      driver: syslog
      options:
        syslog-address: tcp://127.0.0.1:514
        syslog-format: rfc3164
        tag: smtp-out
    healthcheck:
      disable: true # Disabled because makes it makes following the logs harder when degugging

  smtp-in:
    container_name: smtp-in
    image: zixia/simple-mail-forwarder
    ports: ['25:25']
    restart: always
    environment:
      SMF_CONFIG: '@feedsubscription.com:gurdiga@gmail.com'
    depends_on: [logger]
    logging:
      driver: syslog
      options:
        syslog-address: tcp://127.0.0.1:514
        syslog-format: rfc3164
        tag: smtp-in

  app:
    container_name: app
    image: app
    init: true # This is to tell Node process to stop when the container is asked to stop.
    volumes:
      - .tmp/docker-data:/data
    environment:
      TZ: UTC
      NODE_ENV: production #See https://github.com/nodejs/docker-node/blob/main/docs/BestPractices.md
      SMTP_CONNECTION_STRING: smtp://smtp:587
      DATA_DIR_ROOT: /data
    command: node_modules/.bin/ts-node src/cron.ts
    depends_on: [logger]
    logging:
      driver: syslog
      options:
        syslog-address: tcp://127.0.0.1:514
        syslog-format: rfc3164
        tag: app

  subscription:
    container_name: subscription
    image: app
    init: true # This is to tell Node process to stop when the container is asked to stop.
    ports: ['127.0.0.1:3000:3000']
    command: node_modules/.bin/ts-node src/subscription/server.ts
    volumes:
      - .tmp/docker-data:/data
    environment:
      TZ: UTC
      NODE_ENV: production #See https://github.com/nodejs/docker-node/blob/main/docs/BestPractices.md
      DATA_DIR_ROOT: /data
    depends_on: [logger]
    logging:
      driver: syslog
      options:
        syslog-address: tcp://127.0.0.1:514
        syslog-format: rfc3164
        tag: subscription

  # Thanks to https://github.com/wmnnd/nginx-certbot
  website:
    container_name: website
    image: nginx:alpine
    restart: always
    ports: ['80:80', '443:443']
    volumes:
      - ./website/html:/usr/share/nginx/html:ro
      - ./website/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./.tmp/certbot/conf:/etc/letsencrypt
      - ./.tmp/certbot/www:/var/www/certbot
    environment:
      NGINX_HOST: feedsubscription.com
    depends_on: [logger]
    logging:
      driver: syslog
      options:
        syslog-address: tcp://127.0.0.1:514
        syslog-format: rfc3164
        tag: website

  # Thanks to https://github.com/wmnnd/nginx-certbot
  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: always
    volumes:
      - ./.tmp/certbot/conf:/etc/letsencrypt
      - ./website/html:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 7d & wait $${!}; done;'"
    depends_on: [logger]
    logging:
      driver: syslog
      options:
        syslog-address: tcp://127.0.0.1:514
        syslog-format: rfc3164
        tag: certbot

  logger:
    container_name: logger
    image: mumblepins/syslog-ng-alpine
    ports: ['127.0.0.1:514:514']
    volumes:
      - ./.tmp/logs:/var/log/syslog-ng
